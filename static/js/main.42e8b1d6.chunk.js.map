{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onTap","value","Board","i","this","sq","renderSquare","React","Component","Game","state","hist","Array","fill","step","x","history","slice","s","length","calcWinner","setState","concat","status","current","winner","moves","map","move","label","jumpTo","handleTap","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sOAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAMG,MAA1C,SACGH,EAAMI,Q,IAKPC,E,2KACSC,GAAI,IAAD,OACd,OACE,cAACP,EAAD,CACEK,MAAOG,KAAKP,MAAMQ,GAAGF,GACrBH,MAAO,WAAO,EAAKH,MAAMG,MAAMG,Q,+BAMnC,OACE,gCACE,sBAAKL,UAAU,YAAf,UACGM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKR,UAAU,YAAf,UACGM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKR,UAAU,YAAf,UACGM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA1BTC,IAAMC,WAiCpBC,E,kDACJ,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXC,KAAM,CACJ,CAAEN,GAAIO,MAAM,GAAGC,KAAK,QAEtBC,KAAM,EACNC,GAAG,GAPY,E,sDAWTZ,GACR,IAAMa,EAAUZ,KAAKM,MAAMC,KAAKM,MAAM,EAAGb,KAAKM,MAAMI,KAAO,GAErDI,EADUF,EAAQA,EAAQG,OAAS,GACvBd,GAAGY,QACjBG,EAAWF,IAAMA,EAAEf,KACvBe,EAAEf,GAAKC,KAAKM,MAAMK,EAAI,IAAM,IAC5BX,KAAKiB,SAAS,CACZV,KAAMK,EAAQM,OAAO,CAAC,CAAEjB,GAAIa,KAC5BJ,KAAME,EAAQG,OACdJ,GAAIX,KAAKM,MAAMK,O,6BAIZD,GACLV,KAAKiB,SAAS,CACZP,OACAC,EAAID,EAAO,IAAO,M,+BAIZ,IAeJS,EAfG,OACDP,EAAUZ,KAAKM,MAAMC,KACrBa,EAAUR,EAAQZ,KAAKM,MAAMI,MAC7BW,EAASL,EAAWI,EAAQnB,IAE5BqB,EAAQV,EAAQW,KAAI,SAACb,EAAMc,GAC/B,IAAMC,EAAQD,EAAI,WACZA,EADY,sBAEhB,2BACF,OACE,6BACE,wBAAQ7B,QAAS,kBAAM,EAAK+B,OAAOF,IAAnC,SAA2CC,KADpCD,MASb,OAHYL,EAARE,EAAc,kBAAcA,GACrB,uBAAmBrB,KAAKM,MAAMK,EAAI,IAAM,KAGjD,sBAAKjB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACI,EAAD,CACEG,GAAImB,EAAQnB,GACZL,MAAO,SAAAG,GAAC,OAAI,EAAK4B,UAAU5B,QAG/B,sBAAKL,UAAU,YAAf,UACE,8BAAOyB,IACP,6BAAMG,c,GA7DGnB,IAAMC,WA2EzB,SAASY,EAAWf,GAWlB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMb,OAAQhB,IAAK,CAAC,IAAD,cACnB6B,EAAM7B,GADa,GAC9B8B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI9B,EAAG4B,IAAM5B,EAAG4B,KAAO5B,EAAG6B,IAAM7B,EAAG4B,KAAO5B,EAAG8B,GAC3C,OAAO9B,EAAG4B,GAGd,OAAO,KAtBTG,IAASC,OACP,cAAC5B,EAAD,IACA6B,SAASC,eAAe,W","file":"static/js/main.42e8b1d6.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onTap}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.sq[i]}\n        onTap={() => {this.props.onTap(i)}}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hist: [\n        { sq: Array(9).fill(null) }\n      ],\n      step: 0,\n      x: true\n    }\n  }\n\n  handleTap(i) {\n    const history = this.state.hist.slice(0, this.state.step + 1);\n    const current = history[history.length - 1];\n    const s = current.sq.slice();\n    if (calcWinner(s) || s[i]) return;\n    s[i] = this.state.x ? 'X' : 'O';\n    this.setState({\n      hist: history.concat([{ sq: s }]),\n      step: history.length,\n      x: !this.state.x\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      step,\n      x: (step % 2) === 0\n    });\n  }\n\n  render() {\n    const history = this.state.hist;\n    const current = history[this.state.step];\n    const winner = calcWinner(current.sq);\n\n    const moves = history.map((step, move) => {\n      const label = move ?\n        `#${move}へ戻る` :\n        '最初から';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{label}</button>\n        </li>\n      );\n    });\n    let status;\n    if (winner) status = `Winner: ${winner}`;\n    else status = `Next player: ${this.state.x ? 'X' : 'O'}`;\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            sq={current.sq}\n            onTap={i => this.handleTap(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{ moves }</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calcWinner(sq) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (sq[a] && sq[a] === sq[b] && sq[a] === sq[c]) {\n      return sq[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}